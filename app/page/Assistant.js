/** * Created by xiaojiang on 2016/12/21. *//** * Created by xiaojiang on 2016/12/21. 演示模块 => 导游助手 */import React, {Component} from 'react';import {    AppRegistry,    StyleSheet,    Text,    View,    Button,    ListView,    TextInput,    TouchableOpacity,    InteractionManager} from 'react-native';import {MyText} from '../component/GzlComponent.android';import TermDetail from './Assistant/TearmDetail';const ORDER_DATA = {    "api": "GetOrderHistory",    "v": "1.0",    "code": "0",    "msg": "success",    "data": [{        "startDate": "2016-07-02",        "endDate": "2016-07-05",        "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",        "memberCount": "10个大人 0个小孩 0个婴儿",        "teamCate": "送团",        "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",    },        {            "startDate": "2016-07-02",            "endDate": "2016-07-05",            "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",            "memberCount": "10个大人 0个小孩 0个婴儿",            "teamCate": "送团",            "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",        },        {            "startDate": "2016-07-02",            "endDate": "2016-07-05",            "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",            "memberCount": "10个大人 0个小孩 0个婴儿",            "teamCate": "送团",            "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",        },        {            "startDate": "2016-07-02",            "endDate": "2016-07-05",            "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",            "memberCount": "10个大人 0个小孩 0个婴儿",            "teamCate": "送团",            "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",        },        {            "startDate": "2016-07-02",            "endDate": "2016-07-05",            "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",            "memberCount": "10个大人 0个小孩 0个婴儿",            "teamCate": "送团",            "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",        },        {            "startDate": "2016-07-02",            "endDate": "2016-07-05",            "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",            "memberCount": "10个大人 0个小孩 0个婴儿",            "teamCate": "送团",            "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",        },        {            "startDate": "2016-07-02",            "endDate": "2016-07-05",            "productName": "[尚.休闲] 华东三市双飞4天*慢游乌镇*古韵苏州*杭州住桂牌四星*西溪探梅*<苏杭乌>",            "memberCount": "10个大人 0个小孩 0个婴儿",            "teamCate": "送团",            "teamNumber": "GZLG20OGODODF329402T-I-34-13-41",        }    ]}var productName = '';var startDate = '';var endDate = '';export default class guideapp extends Component {    constructor(props) {        super(props);        this.immediatelyQuery = this.immediatelyQuery.bind(this);        this.renderItem = this.renderItem.bind(this);        this.onPressItem = this.onPressItem.bind(this);        this.state = {            dataSource: new ListView.DataSource({                rowHasChanged: (row1, row2) => row1 !== row2,            }),            orders: ORDER_DATA.data,        }    }    immediatelyQuery() {    }    onPressItem(order) {        const {navigator} = this.props;        InteractionManager.runAfterInteractions(() => {            navigator.push({                component: TermDetail,                name: 'TermDetail',                order            })        })    }    //进行渲染 ListView 数据    renderContent(dataSource) {        return (            <ListView                dataSource={dataSource}                renderRow={this.renderItem}                style={{backgroundColor: 'white', flex: 1}}                onEndReachedThreshold={10}                enableEmptySections={true}/>        );    }    // _renderSeparator(){    //     <View style={{height:1, backgroundColor:'black'}}    //     ></View>    //}    //渲染每一项 item 数据    renderItem(order) {        return (            <View style={styles.item}>                <TouchableOpacity onPress={()=> {                    this.onPressItem(order)                }}>                    <View style={{backgroundColor: 'white', paddingBottom: 10}}>                        <View style={styles.rowContainer}>                            <View style={{alignItems: 'flex-start', flexDirection: 'row', flex: 1}}>                                <Text>出发日期 : </Text>                                <Text>{order.startDate}</Text>                            </View>                            <View style={{alignItems: 'flex-end', flexDirection: 'row', flex: 1,}}>                                <Text>回团日期 : </Text>                                <Text>{order.endDate}</Text>                            </View>                        </View>                        <View style={styles.rowContainer}>                            <View style={{flexDirection: 'row'}}>                                <Text>产品名称 : </Text>                                <Text>{order.productName}</Text>                            </View>                        </View>                        <View style={styles.rowContainer}>                            <Text>团队人数 : </Text>                            <Text>{order.memberCount}</Text>                        </View>                        <View style={styles.rowContainer}>                            <Text>导游类别 : </Text>                            <Text>{order.teamCate}</Text>                        </View>                        <View style={styles.rowContainer}>                            <Text>团号 : </Text>                            <Text>{order.teamNumber}</Text>                        </View>                    </View>                </TouchableOpacity>            </View>        )    }    render() {        return (            <View style={{flex: 1, backgroundColor: '#f5f5f5'}}>                <View style={{                    height: 45,                    backgroundColor: 'yellow',                    flexDirection: 'row',                    alignItems: 'center',                    justifyContent: 'center'                }}>                    <Text style={{fontSize: 16, alignSelf: 'center'}}>团队查询</Text>                </View>                <View style={{backgroundColor: 'white'}}>                    <View style={{flexDirection: 'row', paddingTop: 10,}}>                        <View style={{flexDirection: 'row', flex: 1, marginLeft: 10}}>                            <Text>出发日期: </Text>                            <Text>请选择日期</Text>                        </View>                        <View style={{flexDirection: 'row', flex: 1, alignItems: 'flex-end'}}>                            <Text>至 : </Text>                            <Text>请选择日期</Text>                        </View>                    </View>                    <View style={{flexDirection: 'row', paddingTop: 10, marginLeft: 10, marginRight: 10}}>                        <View style={{flex: 1}}>                            <TextInput                                style={{                                    textAlign: 'left',                                    flex: 1,                                }}                                placeholder="请输入产品名称"                                placeholderTextColor="#aaaaaaaa"                                underlineColorAndroid="transparent"                                ref={productName}                                multiline={false}                                autoFocus={false}                                onChangeText={(text) => {                                    productName = text;                                }}                            />                        </View>                        <View>                            <Button                                onPress={() => {                                    this.immediatelyQuery()                                }}                                title="立即查询"></Button>                        </View>                    </View>                </View>                <View style={{flex: 1}}>                    {this.renderContent(this.state.dataSource.cloneWithRows(                        this.state.orders === undefined ? [] : this.state.orders                    ))}                </View>            </View>        );    }}const styles = StyleSheet.create({    rowContainer: {        flexDirection: 'row',        flex: 1,        paddingLeft: 10,        paddingRight: 20,    },    container: {        marginLeft: 20,        marginRight: 20,        flex: 1,        justifyContent: 'center',        alignItems: 'center',        backgroundColor: '#F5FCFF',    },    welcome: {        fontSize: 20,        textAlign: 'center',        margin: 10,    },    instructions: {        textAlign: 'center',        color: '#333333',        marginBottom: 5,    },    item: {        marginTop: 10,        borderBottomColor: '#CCCCCC', //cell 分割线        borderBottomWidth: 1,    }});